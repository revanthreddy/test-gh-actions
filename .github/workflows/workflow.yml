# This is a basic workflow to help you get started with Actions

name: Publish To Artifactory

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        default: 'john-doe'
        required: false
        type: string


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DAY_OF_WEEK: Monday

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Run tests for all modules
        id: run-unit-tests
        run: |
          echo "RUNNING TESTS"
          echo ${{ inputs.vault-address }}
      - name: Print the input name to STDOUT
        run: echo The username is ${{ inputs.username }}

              

  publish:
#    needs: Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Identify updated modules
        id: identify-updated-modules
        uses: tj-actions/changed-files@v37
        with:
          dir_names: "true"
          files: |
            providers/*
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          cd ${GITHUB_WORKSPACE}/scripts/publish
          python -m venv venv
          source bin/activate  
          python -m pip install --upgrade pip  
          pip install -r requirements.txt


      - name: Publish updated modules
        run: |
          source ${GITHUB_WORKSPACE}/scripts/publish/bin/activate
          python ${GITHUB_WORKSPACE}/scripts/publish/hello.py
          bash ${GITHUB_WORKSPACE}/scripts/publish-artifacts.sh ${{ steps.identify-updated-modules.outputs.all_changed_files }}
          bash ${GITHUB_WORKSPACE}/scripts/bla.sh
#          input_string="This is a sample input string for tokenization"
#          IFS=" " read -ra tokens <<< "$input_string"
#          num_tokens=${#tokens[@]}
#          last_element="${tokens[num_tokens-1]}"
#          echo "Last element: $last_element"
#          sh ${GITHUB_WORKSPACE}/scripts/bla.sh
#          echo '${{ toJSON(steps.identify-updated-modules.outputs.all_changed_files) }}'
